{
  "info": {
    "name": "Admin Auth Improvements - Testing",
    "description": "Collection for testing admin authentication improvements",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    {
      "key": "base_url",
      "value": "http://localhost:8000/api",
      "type": "string"
    },
    {
      "key": "token",
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "Authentication",
      "item": [
        {
          "name": "Login without Remember Me",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response has token\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('token');",
                  "    pm.collectionVariables.set(\"token\", jsonData.token);",
                  "});",
                  "",
                  "pm.test(\"Token expires in ~8 hours\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    var expiresAt = new Date(jsonData.expires_at);",
                  "    var now = new Date();",
                  "    var diffHours = (expiresAt - now) / (1000 * 60 * 60);",
                  "    pm.expect(diffHours).to.be.within(7.5, 8.5);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"admin@example.com\",\n  \"password\": \"your_password\",\n  \"remember\": false\n}"
            },
            "url": {
              "raw": "{{base_url}}/login",
              "host": ["{{base_url}}"],
              "path": ["login"]
            }
          }
        },
        {
          "name": "Login with Remember Me",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response has token\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('token');",
                  "    pm.collectionVariables.set(\"token\", jsonData.token);",
                  "});",
                  "",
                  "pm.test(\"Token expires in ~30 days\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    var expiresAt = new Date(jsonData.expires_at);",
                  "    var now = new Date();",
                  "    var diffDays = (expiresAt - now) / (1000 * 60 * 60 * 24);",
                  "    pm.expect(diffDays).to.be.within(29, 31);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"admin@example.com\",\n  \"password\": \"your_password\",\n  \"remember\": true\n}"
            },
            "url": {
              "raw": "{{base_url}}/login",
              "host": ["{{base_url}}"],
              "path": ["login"]
            }
          }
        },
        {
          "name": "Login with Wrong Credentials",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 422\", function () {",
                  "    pm.response.to.have.status(422);",
                  "});",
                  "",
                  "pm.test(\"Has validation error\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('errors');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"admin@example.com\",\n  \"password\": \"wrong_password\",\n  \"remember\": false\n}"
            },
            "url": {
              "raw": "{{base_url}}/login",
              "host": ["{{base_url}}"],
              "path": ["login"]
            }
          }
        },
        {
          "name": "Get Current User",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response has user data\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('user');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/me",
              "host": ["{{base_url}}"],
              "path": ["me"]
            }
          }
        },
        {
          "name": "Logout",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Success message\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.success).to.be.true;",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/logout",
              "host": ["{{base_url}}"],
              "path": ["logout"]
            }
          }
        }
      ]
    },
    {
      "name": "Password Change",
      "item": [
        {
          "name": "Change Password - Success",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Success message in Russian\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.message).to.include('Пароль успешно изменён');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"current_password\": \"your_current_password\",\n  \"new_password\": \"new_password_123\",\n  \"new_password_confirmation\": \"new_password_123\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/admin/change-password",
              "host": ["{{base_url}}"],
              "path": ["admin", "change-password"]
            }
          }
        },
        {
          "name": "Change Password - Wrong Current Password",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 422\", function () {",
                  "    pm.response.to.have.status(422);",
                  "});",
                  "",
                  "pm.test(\"Has validation error for current_password\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.errors).to.have.property('current_password');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"current_password\": \"wrong_password\",\n  \"new_password\": \"new_password_123\",\n  \"new_password_confirmation\": \"new_password_123\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/admin/change-password",
              "host": ["{{base_url}}"],
              "path": ["admin", "change-password"]
            }
          }
        },
        {
          "name": "Change Password - Short Password",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 422\", function () {",
                  "    pm.response.to.have.status(422);",
                  "});",
                  "",
                  "pm.test(\"Has validation error for new_password\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.errors).to.have.property('new_password');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"current_password\": \"your_current_password\",\n  \"new_password\": \"short\",\n  \"new_password_confirmation\": \"short\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/admin/change-password",
              "host": ["{{base_url}}"],
              "path": ["admin", "change-password"]
            }
          }
        },
        {
          "name": "Change Password - Passwords Don't Match",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 422\", function () {",
                  "    pm.response.to.have.status(422);",
                  "});",
                  "",
                  "pm.test(\"Has validation error for new_password\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.errors).to.have.property('new_password');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"current_password\": \"your_current_password\",\n  \"new_password\": \"new_password_123\",\n  \"new_password_confirmation\": \"different_password\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/admin/change-password",
              "host": ["{{base_url}}"],
              "path": ["admin", "change-password"]
            }
          }
        },
        {
          "name": "Change Password - Unauthenticated",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 401\", function () {",
                  "    pm.response.to.have.status(401);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"current_password\": \"password\",\n  \"new_password\": \"new_password_123\",\n  \"new_password_confirmation\": \"new_password_123\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/admin/change-password",
              "host": ["{{base_url}}"],
              "path": ["admin", "change-password"]
            }
          }
        }
      ]
    },
    {
      "name": "Token Refresh",
      "item": [
        {
          "name": "Check for Token Refresh Header",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Check for X-New-Token header\", function () {",
                  "    var newToken = pm.response.headers.get('X-New-Token');",
                  "    if (newToken) {",
                  "        console.log('Token was refreshed!');",
                  "        console.log('New token:', newToken);",
                  "        pm.collectionVariables.set(\"token\", newToken);",
                  "    } else {",
                  "        console.log('Token was not refreshed (expires in >30 minutes)');",
                  "    }",
                  "});",
                  "",
                  "pm.test(\"Check for X-Token-Expires-At header\", function () {",
                  "    var expiresAt = pm.response.headers.get('X-Token-Expires-At');",
                  "    if (expiresAt) {",
                  "        console.log('New expiration:', expiresAt);",
                  "    }",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/me",
              "host": ["{{base_url}}"],
              "path": ["me"]
            },
            "description": "This request checks if the token is automatically refreshed. If the token expires within 30 minutes, you should see X-New-Token and X-Token-Expires-At headers in the response."
          }
        }
      ]
    }
  ]
}
