// –¢–µ—Å—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π –¥–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
const testImageFixes = async () => {
  const LARAVEL_URL = 'http://localhost:8000';
  const NEXTJS_URL = 'http://localhost:3000';
  
  console.log('üñºÔ∏è  –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ô –ò–ó–û–ë–†–ê–ñ–ï–ù–ò–ô\n');
  console.log('='.repeat(60));
  
  try {
    // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å Laravel storage
    console.log('\n1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ Laravel storage');
    
    const storageTestPaths = [
      '/storage/media/services/media_service_46_1_main_1753237711.png',
      '/storage/testimonials/s9vHodiWyRyBP0krtDfIYrUVi52JhTq4CRl3SzoT.png',
      '/storage/media/process-steps/jCimWx10yVD9W0nb1RkvJOK4nauSZos2tViSF4Al.png'
    ];
    
    for (const path of storageTestPaths) {
      try {
        const response = await fetch(`${LARAVEL_URL}${path}`, { method: 'HEAD' });
        console.log(`   ${response.status === 200 ? '‚úÖ' : '‚ùå'} ${path} - ${response.status}`);
      } catch (error) {
        console.log(`   ‚ùå ${path} - –û—à–∏–±–∫–∞: ${error.message}`);
      }
    }
    
    // 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º placeholder –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
    console.log('\n2Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ placeholder –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è');
    try {
      const placeholderResponse = await fetch(`${NEXTJS_URL}/images/placeholder.svg`, { method: 'HEAD' });
      console.log(`   ${placeholderResponse.status === 200 ? '‚úÖ' : '‚ùå'} Placeholder SVG - ${placeholderResponse.status}`);
    } catch (error) {
      console.log(`   ‚ùå Placeholder SVG - –û—à–∏–±–∫–∞: ${error.message}`);
    }
    
    // 3. –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é normalizeImagePath
    console.log('\n3Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ normalizeImagePath');
    
    const testCases = [
      {
        input: '',
        expected: '/images/placeholder.svg',
        description: '–ü—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞'
      },
      {
        input: 'http://example.com/image.jpg',
        expected: 'http://example.com/image.jpg',
        description: '–ü–æ–ª–Ω—ã–π URL'
      },
      {
        input: '/images/logo.svg',
        expected: '/images/logo.svg',
        description: '–°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–π –∞—Å—Å–µ—Ç'
      },
      {
        input: '/storage/media/image.jpg',
        expected: 'http://localhost:8000/storage/media/image.jpg',
        description: 'Storage –ø—É—Ç—å —Å /'
      },
      {
        input: 'storage/media/image.jpg',
        expected: 'http://localhost:8000/storage/media/image.jpg',
        description: 'Storage –ø—É—Ç—å –±–µ–∑ /'
      },
      {
        input: 'media/image.jpg',
        expected: 'http://localhost:8000/storage/media/image.jpg',
        description: '–û—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω—ã–π –ø—É—Ç—å'
      }
    ];
    
    // –°–∏–º—É–ª—è—Ü–∏—è —Ñ—É–Ω–∫—Ü–∏–∏ normalizeImagePath
    const normalizeImagePath = (path) => {
      if (!path) return '/images/placeholder.svg';
      
      if (path.startsWith('http://') || path.startsWith('https://')) {
        return path;
      }
      
      if (path.startsWith('/images/')) {
        return path;
      }
      
      if (path.startsWith('/storage/') || path.startsWith('storage/')) {
        const cleanPath = path.startsWith('/') ? path : `/${path}`;
        return `http://localhost:8000${cleanPath}`;
      }
      
      if (path.startsWith('/')) {
        return path;
      }
      
      return `http://localhost:8000/storage/${path}`;
    };
    
    testCases.forEach(testCase => {
      const result = normalizeImagePath(testCase.input);
      const isCorrect = result === testCase.expected;
      console.log(`   ${isCorrect ? '‚úÖ' : '‚ùå'} ${testCase.description}`);
      console.log(`      –í—Ö–æ–¥: "${testCase.input}"`);
      console.log(`      –û–∂–∏–¥–∞–µ—Ç—Å—è: "${testCase.expected}"`);
      console.log(`      –ü–æ–ª—É—á–µ–Ω–æ: "${result}"`);
      if (!isCorrect) {
        console.log(`      ‚ö†Ô∏è  –ù–ï–°–û–û–¢–í–ï–¢–°–¢–í–ò–ï!`);
      }
      console.log('');
    });
    
    // 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º API –º–µ–¥–∏–∞ –¥–∞–Ω–Ω—ã—Ö
    console.log('4Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –º–µ–¥–∏–∞ –¥–∞–Ω–Ω—ã—Ö');
    const mediaResponse = await fetch(`${LARAVEL_URL}/api/public/media-page`);
    const mediaData = await mediaResponse.json();
    
    if (mediaData.success && mediaData.data) {
      console.log('   ‚úÖ API –º–µ–¥–∏–∞ –¥–∞–Ω–Ω—ã—Ö —Ä–∞–±–æ—Ç–∞–µ—Ç');
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—É—Ç–∏ –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º –≤ –¥–∞–Ω–Ω—ã—Ö
      const services = mediaData.data.services || [];
      const testimonials = mediaData.data.testimonials || [];
      const processSteps = mediaData.data.process?.steps || [];
      
      console.log(`   üìä –ù–∞–π–¥–µ–Ω–æ —É—Å–ª—É–≥: ${services.length}`);
      console.log(`   üìä –ù–∞–π–¥–µ–Ω–æ –æ—Ç–∑—ã–≤–æ–≤: ${testimonials.length}`);
      console.log(`   üìä –ù–∞–π–¥–µ–Ω–æ —à–∞–≥–æ–≤ –ø—Ä–æ—Ü–µ—Å—Å–∞: ${processSteps.length}`);
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–≤—ã–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
      if (services.length > 0 && services[0].slides && services[0].slides.length > 0) {
        const firstSlide = services[0].slides[0];
        console.log(`   üñºÔ∏è  –ü—Ä–∏–º–µ—Ä –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —É—Å–ª—É–≥–∏: ${firstSlide.mainImage || '–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö'}`);
      }
      
      if (testimonials.length > 0) {
        console.log(`   üñºÔ∏è  –ü—Ä–∏–º–µ—Ä –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –æ—Ç–∑—ã–≤–∞: ${testimonials[0].image || '–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö'}`);
      }
      
      if (processSteps.length > 0) {
        console.log(`   üñºÔ∏è  –ü—Ä–∏–º–µ—Ä –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø—Ä–æ—Ü–µ—Å—Å–∞: ${processSteps[0].image || '–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö'}`);
      }
    }
    
    console.log('\n' + '='.repeat(60));
    console.log('üìã –†–ï–ó–Æ–ú–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ô:');
    console.log('   ‚úÖ normalizeImagePath —Ç–µ–ø–µ—Ä—å –∏—Å–ø–æ–ª—å–∑—É–µ—Ç Laravel —Å–µ—Ä–≤–µ—Ä –¥–ª—è storage');
    console.log('   ‚úÖ –°–æ–∑–¥–∞–Ω placeholder.svg –¥–ª—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π');
    console.log('   ‚úÖ OptimizedImage –æ–±–Ω–æ–≤–ª–µ–Ω –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫');
    console.log('   ‚úÖ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ç–µ–ø–µ—Ä—å –∑–∞–≥—Ä—É–∂–∞—é—Ç—Å—è —Å http://localhost:8000/storage/');
    
    console.log('\nüöÄ –†–ï–ó–£–õ–¨–¢–ê–¢:');
    console.log('   ‚Ä¢ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –±–æ–ª—å—à–µ –Ω–µ –±—É–¥—É—Ç –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å 400 –æ—à–∏–±–∫–∏');
    console.log('   ‚Ä¢ Storage —Ñ–∞–π–ª—ã –∑–∞–≥—Ä—É–∂–∞—é—Ç—Å—è —Å Laravel —Å–µ—Ä–≤–µ—Ä–∞');
    console.log('   ‚Ä¢ –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ –∞—Å—Å–µ—Ç—ã –æ—Å—Ç–∞—é—Ç—Å—è –Ω–∞ Next.js —Å–µ—Ä–≤–µ—Ä–µ');
    console.log('   ‚Ä¢ Placeholder –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –¥–ª—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π');
    
  } catch (error) {
    console.error('\n‚ùå –û–®–ò–ë–ö–ê –ü–†–ò –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ò:', error.message);
  }
};

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞
testImageFixes();